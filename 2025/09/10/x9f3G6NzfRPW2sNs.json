{"nodes":[{"parameters":{},"id":"696255b0-7786-410c-927f-ffb4fa7784b9","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[1312,352],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":864,"width":2111,"color":6},"id":"5ffbd7ff-596c-4d69-a327-95ab9e31c144","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[1088,944],"typeVersion":1},{"parameters":{},"id":"d552bfbd-24cc-43ab-b008-ba837525e234","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[1088,1280],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"4cf656ea-b62c-4c9a-9a2c-f3cd4736af6f","name":"n8n","type":"n8n-nodes-base.n8n","position":[1712,448],"typeVersion":1,"credentials":{"n8nApi":{"id":"zYmzXS5ag5Hm5ImJ","name":"n8n account"}}},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"bc776b1e-de7a-4c5c-ab3e-fc6ede7f6d93","name":"Return","type":"n8n-nodes-base.set","position":[3056,1088],"typeVersion":3.3},{"parameters":{"conditions":{"options":{"version":1,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"exists","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"3ce332ca-3827-4c2d-becd-837da737d285","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"cc1748c6-972e-4909-a0d9-2aada40e49b6","name":"If file too large","type":"n8n-nodes-base.if","position":[1728,1008],"typeVersion":2},{"parameters":{},"id":"68c529b3-8530-42c9-8efa-7c35ea6c24f0","name":"Merge Items","type":"n8n-nodes-base.merge","position":[1728,1264],"typeVersion":2},{"parameters":{},"id":"627cc21c-1f7f-4266-a558-357289bb2746","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[2592,1088],"typeVersion":1},{"parameters":{},"id":"6e77f25e-b58c-4e23-a5c7-1951c36e59b6","name":"File is different","type":"n8n-nodes-base.noOp","position":[2592,1248],"typeVersion":1},{"parameters":{},"id":"37d72317-7140-45eb-ac62-e88ec7b9fc97","name":"File is new","type":"n8n-nodes-base.noOp","position":[2592,1440],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"name","value":"={{ $('Config').first().json.repo_owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Config').first().json.repo_name }}"},"filePath":"={{ $('Create sub path').item.json.subPath }}/{{ $('Execute Workflow Trigger').first().json.id }}.json","fileContent":"={{ JSON.stringify($('Config').first().json.data) }}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.githubStatus}})"},"id":"770c9612-e6fb-4d6c-9a89-459e7d5acc31","name":"Create new file","type":"n8n-nodes-base.github","position":[2816,1440],"webhookId":"fc6b1cf0-6440-4fb0-94bf-fadabb6ea1fd","typeVersion":1,"credentials":{"githubApi":{"id":"4q8eFxdddzV3ODSS","name":"GitHub account"}}},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"name","value":"={{ $('Config').first().json.repo_owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Config').first().json.repo_name }}"},"filePath":"={{ $('Create sub path').item.json.subPath }}/{{ $('Execute Workflow Trigger').first().json.id }}.json","fileContent":"={{ JSON.stringify($('Config').first().json.data) }}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{ $json.githubStatus }})"},"id":"121272d6-0535-494e-b14a-3cc00f87cb8d","name":"Edit existing file","type":"n8n-nodes-base.github","position":[2816,1248],"webhookId":"81fc5f33-06e3-4368-ba2e-0ef46dd8b021","typeVersion":1,"credentials":{"githubApi":{"id":"4q8eFxdddzV3ODSS","name":"GitHub account"}}},{"parameters":{"options":{}},"id":"2847116a-c862-4803-8079-a40e4edd22f7","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1920,448],"typeVersion":3},{"parameters":{"rule":{"interval":[{}]}},"id":"ec0c92a3-73fa-480b-bdd3-e51648e8b0a0","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[1312,544],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $now.setZone('UTC').toFormat('yyyy') }}/{{ $now.setZone('UTC').toFormat('MM') }}/{{ $now.setZone('UTC').toFormat('dd') }}"}]},"includeOtherFields":true,"options":{}},"id":"289ec775-7191-4710-85e8-ae33542f9fbd","name":"Create sub path","type":"n8n-nodes-base.set","position":[2176,1264],"typeVersion":3.3},{"parameters":{"content":"## Main workflow loop","height":1000,"width":2113,"color":7},"id":"b9bf504a-3acf-4706-992d-a522e9693df8","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[1088,224],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"=marcoippel"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"=datproto-backup-n8n"},{"id":"2b38f96a-a970-4d13-900e-f15e4cd65c51","name":"data","type":"object","value":"={{\n  {\n    \"nodes\": $('Execute Workflow Trigger').item.json.nodes,\n    \"connections\": $('Execute Workflow Trigger').item.json.connections,\n    \"pinData\": $('Execute Workflow Trigger').item.json.pinData,\n    \"meta\": $('Execute Workflow Trigger').item.json.meta\n  }\n}}"}]},"includeOtherFields":true,"options":{}},"id":"2470503e-cb6a-44a5-a4aa-b431874e2e09","name":"Config","type":"n8n-nodes-base.set","position":[1360,1280],"typeVersion":3.4},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"name","value":"={{ $json.repo_owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $json.repo_name }}"},"filePath":"={{ $now.setZone('UTC').toFormat('yyyy') }}/{{ $now.setZone('UTC').toFormat('MM') }}/{{ $now.setZone('UTC').toFormat('dd') }}/{{ $('Execute Workflow Trigger').item.json.id }}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"110ba2cd-6a39-4663-81d5-6b2893d42e18","name":"Get file data","type":"n8n-nodes-base.github","position":[1536,1008],"webhookId":"883c4829-4a9d-4320-ab49-226a5bc15863","typeVersion":1,"alwaysOutputData":true,"credentials":{"githubApi":{"id":"4q8eFxdddzV3ODSS","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"workflowId":{"__rl":true,"mode":"id","value":"={{ $workflow.id }}"},"workflowInputs":{"value":{},"schema":[],"mappingMode":"defineBelow","matchingColumns":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"id":"2bdbcb80-2c2b-4fb8-bddb-eb9e6c6db0e0","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[2336,544],"typeVersion":1.2,"onError":"continueErrorOutput"},{"parameters":{},"id":"2366b904-8f2f-42ce-aa2f-fc941cb73ad4","name":"Wait","type":"n8n-nodes-base.wait","position":[2560,640],"webhookId":"577d599b-e2eb-4e7c-92aa-b9ca787cc40a","typeVersion":1.1},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"name","value":"={{ $('Config').item.json.repo_owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Config').item.json.repo_name }}"},"filePath":"={{ $now.setZone('UTC').toFormat('yyyy') }}/{{ $now.setZone('UTC').toFormat('MM') }}/{{ $now.setZone('UTC').toFormat('dd') }}/{{ $('Execute Workflow Trigger').item.json.id }}.json","additionalParameters":{}},"id":"e9ad632a-0506-4709-a485-67c45bf388f6","name":"Get file","type":"n8n-nodes-base.github","position":[1952,992],"webhookId":"81fc5f33-06e3-4368-ba2e-0ef46dd8b021","typeVersion":1,"credentials":{"githubApi":{"id":"4q8eFxdddzV3ODSS","name":"GitHub account"}}},{"parameters":{"amount":10},"id":"656913c3-cb57-4129-ae12-42f70800a9ef","name":"Wait1","type":"n8n-nodes-base.wait","position":[2336,304],"webhookId":"4a7448b4-930e-4110-b205-95c55cac5bba","typeVersion":1.1},{"parameters":{"jsCode":"function isMatch(obj, source) {\n  return Object.keys(source).every(key => obj[key] === source[key]);\n}\n\nlet fileInput = null;\n\nif (Object.keys($input.first().json).includes(\"content\")) {\n  fileInput = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n}\n\nconst n8nInput = $input.last().json.data;\n\nif (!fileInput) {\n  return {\n    \"githubStatus\": \"new\"\n  }\n}\n\nif (isMatch(fileInput, n8nInput)) {\n  return {\n    \"githubStatus\": \"same\"\n  }\n} else {\n  return {\n    \"githubStatus\": \"different\"\n  }\n}"},"id":"09738ea8-1a61-4967-ac3d-2a9f64b39329","name":"verifyTheDifference","type":"n8n-nodes-base.code","position":[1952,1264],"typeVersion":2},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"1e6de6b4-3074-41bc-8a9d-465c0eb9a773","operator":{"type":"string","operation":"equals"},"leftValue":"={{ $('verifyTheDifference').first().json.githubStatus }}","rightValue":"same"}]},"renameOutput":true,"outputKey":"same"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"cf6e130e-c85d-4a24-b11a-abfd0ecfcb19","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $('verifyTheDifference').first().json.githubStatus }}","rightValue":"different"}]},"renameOutput":true,"outputKey":"different"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"f2fc6dda-85f5-4b81-b016-3e033b1dbcab","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $('verifyTheDifference').first().json.githubStatus }}","rightValue":"new"}]},"renameOutput":true,"outputKey":"=new"}]},"options":{}},"id":"7cb7b34c-8742-44c3-9792-1084abf2783a","name":"Switch","type":"n8n-nodes-base.switch","position":[2368,1264],"typeVersion":3.2},{"parameters":{"amount":10},"id":"c6410f39-34d8-448f-9efd-d66da067637b","name":"Wait2","type":"n8n-nodes-base.wait","position":[2560,464],"webhookId":"4a7448b4-930e-4110-b205-95c55cac5bba","typeVersion":1.1},{"parameters":{"content":"# Workflows backup to Github\n======================================================================\n\n## Introduction\nThis workflow will backup all of your existed workflows to a single Github repository.\n\nThe Backup folders' name are based on the current backup date and have default format: \"yyyy/MM/dd\" (setup at \"Create sub path\" node).\n\nThroughout the backup process, the N8N will inform user via discord with clear message about Start, Success and Failure backups.\n\n## Tech Stack\nThe following nodes / services / libraries are used in this workflow:\n\n### Nodes:\n1. **Discord:** To send message to configured setup channel.\n2. **N8N:** To get all workflows' information.\n3. **Github:** To store backup data.\n4. **Code:** To run data comparison (Existed vs Latest workflow data).\n5. **Wait:** To avoid discord message rate limit.\n\n### External libraries:\n1. **Underscore.js:** JavaScript library that provides lots of common Javascript functions, to help user save time when using code node.\n\n## Guideline\n1. Open \"Config\" node and setup the following information:\n    - **repo_owner:** Your Github username.\n    - **repo_name:** The repository that you want to store workflows backup data.\n2. Open \"Create sub path\" node and change the naming and path format of backup folder(s).\n3. Setup custom messages in 3 discord nodes:\n    - **Starting Message:** N8N inform user at the time workflow start.\n    - **Inform Success Flows:** After each success backup, N8N will notify user.\n    - **Inform Failed Flows:** After each failure backup, N8N will notify user to have appropriate action.\n    - **Completed Notifications:** Then at the final, the workflow will give user a summary.","height":1400,"width":680,"color":4},"id":"a3c4ff40-9887-4e38-985a-f32536d9306f","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[368,240],"typeVersion":1},{"parameters":{},"type":"n8n-nodes-base.stickyNote","position":[1968,864],"typeVersion":1,"id":"9b2be6b6-cc37-4a6d-8e3d-378b05bbe064","name":"Sticky Note3"},{"parameters":{"chatId":"8400587790","text":"=The Git backup here. Below is my latest activity: ``` 👉 Starting Workflow Backup [{{ $execution.id }}] ```","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[1536,448],"id":"750d6048-5abb-454e-8f0d-4db04ba2129b","name":"Send a text message","webhookId":"615c347b-d2ff-440e-9ab9-4c99ff40c161","credentials":{"telegramApi":{"id":"iKtTM6paYduvyNoQ","name":"Telegram account"}}},{"parameters":{"chatId":"8400587790","text":"=The Git backup here. Below is my latest activity: ``` ✅ Backup has completed - {{ $('n8n').all().length }} workflows have been processed. ```","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[2576,304],"id":"88f5a376-1aa7-4d96-8aae-0a78bbdb6bbc","name":"Send a text message1","webhookId":"2d3fcf5b-b696-4d8f-8af5-27d1b6e72935","credentials":{"telegramApi":{"id":"iKtTM6paYduvyNoQ","name":"Telegram account"}}},{"parameters":{"chatId":"8400587790","text":"=The Git backup here. Below is my latest activity:\n```\n✅ Success to backup {{ $('Loop Over Items').item.json.id }}\n```","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[2752,464],"id":"4cdb4833-ad8c-4785-91c0-5d0dc02d8b52","name":"Inform Success Flows1","webhookId":"2d3fcf5b-b696-4d8f-8af5-27d1b6e72935","credentials":{"telegramApi":{"id":"iKtTM6paYduvyNoQ","name":"Telegram account"}}},{"parameters":{"chatId":"8400587790","text":"=The Git backup here. Below is my latest activity:\n```\n👉 Failed to backup {{ $('Loop Over Items').item.json.id }}\n```","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[2768,640],"id":"c22e6cc1-3f05-47c5-92b4-313012064815","name":"Inform Failed Flows1","webhookId":"2d3fcf5b-b696-4d8f-8af5-27d1b6e72935","credentials":{"telegramApi":{"id":"iKtTM6paYduvyNoQ","name":"Telegram account"}}}],"connections":{"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Wait":{"main":[[{"node":"Inform Failed Flows1","type":"main","index":0}]]},"Wait1":{"main":[[{"node":"Send a text message1","type":"main","index":0}]]},"Wait2":{"main":[[{"node":"Inform Success Flows1","type":"main","index":0}]]},"Config":{"main":[[{"node":"Merge Items","type":"main","index":1},{"node":"Get file data","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Get file":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"verifyTheDifference","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Wait1","type":"main","index":0}],[{"node":"Execute Workflow","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Wait2","type":"main","index":0}],[{"node":"Wait","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Send a text message","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get file","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"verifyTheDifference":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"Send a text message","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Config","type":"main","index":0}]]},"Send a text message":{"main":[[{"node":"n8n","type":"main","index":0}]]},"Inform Success Flows1":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Inform Failed Flows1":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]}},"pinData":{},"meta":{"templateId":"3990","templateCredsSetupCompleted":true}}